name: build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    name: Q${{ matrix.quantum_depth }} HDRI=${{ matrix.hdri }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        quantum_depth: [8, 16, 32]
        hdri: [ON, OFF]
        exclude:
          - os: ubuntu-22.04
            quantum_depth: 32
            hdri: OFF
          - os: ubuntu-22.04
            quantum_depth: 8
            hdri: ON
    steps:
      - name: Install build dependencies
        env:
          PACKAGES: >
            fonts-dejavu-extra libfribidi-dev libfreetype-dev libfontconfig1-dev gsfonts ghostscript
            zlib1g-dev liblzma-dev libbz2-dev libzstd-dev
            libx11-dev libxext-dev libxt-dev
            libdjvulibre-dev libexif-dev libgd-dev libgraphviz-dev libjpeg-dev libopenjp2-7-dev libopenexr-dev
            libpng-dev libraw-dev libtiff-dev libwmf-dev libwebp-dev libpango1.0-dev librsvg2-bin librsvg2-dev
            libxml2-dev libraqm-dev libheif-dev libgoogle-perftools-dev libltdl-dev libfftw3-dev
            liblcms2-dev liblqr-1-0-dev libgif-dev freeglut3-dev libbrotli-dev
            ccache libarchive-tools clang lld llvm
        run: |
          sudo apt update -qq
          sudo apt install -y libunwind-dev
          sudo apt install -y --no-install-recommends ${{ env.PACKAGES }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.os }}-${{ matrix.quantum_depth }}-${{ matrix.hdri }}-${{ github.run_id }}
          restore-keys: ccache-${{ matrix.os }}-${{ matrix.quantum_depth }}-${{ matrix.hdri }}-

      - name: Build ImageMagick
        id: build
        env:
          QDEPTH: ${{ matrix.quantum_depth }}
          HDRI: ${{ matrix.hdri }}
        run: |
          bash -x build.sh

      - name: Upload artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: magick-${{ matrix.os }}-Q${{ matrix.quantum_depth }}-HDRI-${{ matrix.hdri }}
          path: ./**/magick*.tar.*

  release:
    # if: false
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Get version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "VERSION=$(gh api repos/ImageMagick/ImageMagick/releases/latest --jq '.tag_name')" >> $GITHUB_ENV

      - name: Upload release assets
        uses: spvkgn/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          tag_name: latest
          name: ${{ env.VERSION }}
          files: |
            ./**/magick*.tar.*
